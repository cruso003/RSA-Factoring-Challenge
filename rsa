#!/usr/bin/python3

"""Factorize a number into two prime numbers"""
import sys
import time
import random

def gcd(a, b):
    """Calculate the greatest common divisor of a and b"""
    while b:
        a, b = b, a % b
    return a

def pollards_rho(n):
    """Pollard's rho algorithm for factorization"""
    if n % 2 == 0:
        return 2

    x = random.randint(1, n - 1)
    y = x
    c = random.randint(1, n - 1)
    d = 1

    f = lambda x: (x**2 + c) % n

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)

    return d

def factorize(n):
    """Factorize a number into two prime numbers"""
    if n <= 1:
        return n, 1

    elem = pollards_rho(n)
    if elem == n:
        return n, 1

    fac = n // elem
    return fac, elem

def factorize_file(path):
    """Factorize a number in the provided file into two prime numbers"""
    try:
        with open(path) as f:
            n = int(f.read().strip())
            p, q = factorize(n)
            print(f"{n} = {p} * {q}")

            if time.time() - start_time > 5:
                print("Execution time exceeded the limit.")
    except FileNotFoundError:
        print(f"File '{path}' not found.")
    except ValueError:
        print("Invalid data in the file.")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        sys.exit(f"Usage: {sys.argv[0]} <path>")

    factors = sys.argv[1]

    start_time = time.time()

    factorize_file(factors)
